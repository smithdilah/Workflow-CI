name: students MLflow CI/CD

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  MLFLOW_TRACKING_URI: https://dagshub.com/smithdilah/students_dagshub.mlflow
  MLFLOW_TRACKING_USERNAME: smithdilah
  MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}

jobs:
  train-deploy:
    runs-on: ubuntu-latest

    steps:
    # Checkout source code
    - name: Checkout repository
      uses: actions/checkout@v3

    # Set up Python
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    # Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r MLProject/requirements.txt

    # Run training script
    - name: Train model with MLflow
      run: |
        cd MLProject
        python modeling.py

    # Get latest MLflow run_id
    - name: Get latest run_id from MLflow
      id: get_run
      run: |
        echo "import mlflow, os" > get_run.py
        echo "mlflow.set_tracking_uri(\"$MLFLOW_TRACKING_URI\")" >> get_run.py
        echo "client = mlflow.tracking.MlflowClient()" >> get_run.py
        echo "exp = client.get_experiment_by_name(\"students-experiment\")" >> get_run.py
        echo "if exp is None: raise Exception(\"Experiment not found\")" >> get_run.py
        echo "runs = client.search_runs(exp.experiment_id, order_by=['start_time DESC'], max_results=1)" >> get_run.py
        echo "run_id = runs[0].info.run_id" >> get_run.py
        echo "print(f'run_id={run_id}')" >> get_run.py
        echo "with open(os.environ['GITHUB_OUTPUT'], 'a') as f: f.write(f'run_id={run_id}\\n')" >> get_run.py
        python get_run.py

    # Download model artifacts
    - name: Download model artifacts
      run: |
        pip install mlflow
        mlflow artifacts download \
          --run-id ${{ steps.get_run.outputs.run_id }} \
          --artifact-path model \
          -d ./model_dir

    # Upload model artifacts to GitHub Actions (opsional)
    - name: Upload model artifacts
      uses: actions/upload-artifact@v4
      with:
        name: rf_model
        path: ./model_dir

    # Copy inference script and build Docker image
    - name: Prepare Docker build
      run: |
        cp MLProject/inference.py ./inference.py

    - name: Build Docker image
      run: |
        docker build -t students-performance-image .

    # Authenticate to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    # Tag Docker image with Docker Hub username and repo
    - name: Tag Docker image
      run: |
        docker tag students-performance-image nurfdlah/students-performance-model:latest

    # Push Docker image to Docker Hub
    - name: Push Docker image to Docker Hub
      run: |
        docker push nurfdlah/students-performance-model:latest
