name: CI/CD Students Model - MLflow to DockerHub

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  MLFLOW_TRACKING_URI: https://dagshub.com/smithdilah/students_dagshub.mlflow
  MLFLOW_TRACKING_USERNAME: smithdilah
  MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}

jobs:
  train-log-build-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install -r MLProject/requirements.txt
        pip install mlflow pyyaml

    - name: Train and log ML model with MLflow
      run: |
        cd MLProject
        python modeling.py

    - name: Get latest run_id from DagsHub MLflow
      id: get_run
      run: |
        echo "from mlflow import tracking" > get_run.py
        echo "client = tracking.MlflowClient(tracking_uri='${{ env.MLFLOW_TRACKING_URI }}')" >> get_run.py
        echo "exp = client.get_experiment_by_name('students-experiment')" >> get_run.py
        echo "runs = client.search_runs(exp.experiment_id, order_by=['start_time DESC'])" >> get_run.py
        echo "run_id = runs[0].info.run_id" >> get_run.py
        echo "print(f'run_id={run_id}')" >> get_run.py
        echo "with open('${{ github.env }}', 'a') as f: f.write(f'RUN_ID={run_id}\\n')" >> get_run.py
        python get_run.py

    - name: Download model artifacts from DagsHub
      run: |
        mkdir -p model_dir
        FILES="MLmodel conda.yaml requirements.txt model.pkl"

        for FILE in $FILES; do
          curl -L -u "$MLFLOW_TRACKING_USERNAME:$MLFLOW_TRACKING_PASSWORD" \
            "https://dagshub.com/smithdilah/students_dagshub.mlflow/raw/mlruns/0/$RUN_ID/artifacts/model/$FILE" \
            -o model_dir/$FILE
        done

    - name: Validate MLmodel file
      run: python -c "import yaml; yaml.safe_load(open('model_dir/MLmodel'))"

    - name: Build Docker image
      run: |
        docker build -t smithdilah/students-model:${{ github.sha }} -f docker/Dockerfile .

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Push Docker image
      run: |
        docker push smithdilah/students-model:${{ github.sha }}

    - name: Log out Docker
      if: always()
      run: docker logout
