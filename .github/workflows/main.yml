name: CI/CD MLflow Students

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  MLFLOW_TRACKING_URI: https://dagshub.com/smithdilah/students_dagshub.mlflow
  MLFLOW_TRACKING_USERNAME: smithdilah
  MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Setup Python
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      # 3. Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r MLProject/requirements.txt

      # 4. Run training script
      - name: Train Model
        run: |
          cd MLProject
          python modeling.py

      # 5. Get latest run_id
      - name: Get latest MLflow run_id
        id: get_run
        run: |
          echo "import mlflow, os" > get_run.py
          echo "mlflow.set_tracking_uri(\"$MLFLOW_TRACKING_URI\")" >> get_run.py
          echo "client = mlflow.tracking.MlflowClient()" >> get_run.py
          echo "exp = client.get_experiment_by_name(\"students-experiment\")" >> get_run.py
          echo "if exp is None: raise Exception(\"Experiment not found\")" >> get_run.py
          echo "run_id = client.search_runs(exp.experiment_id, order_by=[\"start_time DESC\"], max_results=1)[0].info.run_id" >> get_run.py
          echo "print(f\"RUN_ID={run_id}\")" >> get_run.py
          echo "with open(os.environ[\"GITHUB_ENV\"], \"a\") as f: f.write(f\"RUN_ID={run_id}\\n\")" >> get_run.py
          python get_run.py

      # 6. Build Docker image
      - name: Build Docker Image
        run: |
          pip install mlflow[extras]
          mlflow models build-docker --model-uri "runs:/$RUN_ID/model" --name students-performance-model

      # 7. Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # 8. Tag Docker image
      - name: Tag Docker Image
        run: |
          docker tag students-performance-model nurfdlh/students-performance-model:latest

      # 9. Push Docker image
      - name: Push Docker Image
        run: |
          docker push nurfdlh/students-performance-model:latest
