name: students MLflow

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  MLFLOW_TRACKING_URI: https://dagshub.com/smithdilah/students_dagshub.mlflow
  MLFLOW_TRACKING_USERNAME: smithdilah
  MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}

jobs:
  train-log-model:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python 3.12.7
        uses: actions/setup-python@v4
        with:
          python-version: "3.12.7"

      - name: Check Environment
        run: |
          python --version
          echo "MLFLOW_TRACKING_URI : $MLFLOW_TRACKING_URI"
          echo "MLFLOW_TRACKING_USERNAME : $MLFLOW_TRACKING_USERNAME"
          echo "MLFLOW_TRACKING_PASSWORD exists? : ${MLFLOW_TRACKING_PASSWORD:+YES}"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r MLProject/requirements.txt
          pip install mlflow

      - name: Run MLflow modeling script
        run: |
          cd MLProject
          python modeling.py

      - name: Get latest MLflow run_id
        id: get_run
        run: |
          echo "import mlflow, os" > get_run.py
          echo "mlflow.set_tracking_uri(\"$MLFLOW_TRACKING_URI\")" >> get_run.py
          echo "client = mlflow.tracking.MlflowClient()" >> get_run.py
          echo "exp = client.get_experiment_by_name(\"students-experiment\")" >> get_run.py
          echo "if exp is None: raise Exception(\"Experiment not found\")" >> get_run.py
          echo "runs = client.search_runs(exp.experiment_id, order_by=[\"start_time DESC\"], max_results=1)" >> get_run.py
          echo "run_id = runs[0].info.run_id" >> get_run.py
          echo "print(\"Found RUN_ID:\", run_id)" >> get_run.py
          echo "with open(os.environ['GITHUB_OUTPUT'], 'a') as f: f.write(f\"run_id={run_id}\\n\")" >> get_run.py
          python get_run.py

      - name: Download model artifacts from DagsHub
        run: |
          mkdir -p ./model_dir
          FILES="MLmodel conda.yaml requirements.txt model.pkl"
          for file in $FILES; do
            echo "Downloading $file..."
            curl -L -u "$MLFLOW_TRACKING_USERNAME:$MLFLOW_TRACKING_PASSWORD" \
              "$MLFLOW_TRACKING_URI/raw/mlruns/0/${{ steps.get_run.outputs.run_id }}/artifacts/model/$file" \
              -o "./model_dir/$file"
          done

      - name: Upload model artifact
        uses: actions/upload-artifact@v4
        with:
          name: rf_model
          path: ./model_dir

      - name: Build Docker Image from MLflow model
        env:
          MLFLOW_RUN_ID: ${{ steps.get_run.outputs.run_id }}
          MLFLOW_TRACKING_URI: ${{ env.MLFLOW_TRACKING_URI }}
        run: |
          pip install mlflow
          echo "Building Docker image for MLflow model"
          DOCKER_IMAGE_NAME="smithdilah/students-model:${{ github.sha }}"
          echo "Image name: $DOCKER_IMAGE_NAME"
          mlflow models build-docker \
            --model-uri "$MLFLOW_TRACKING_URI/runs:/${MLFLOW_RUN_ID}/model" \
            --name "$DOCKER_IMAGE_NAME" \
            --enable-mlserver

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker Image to Docker Hub
        run: |
          DOCKER_IMAGE_NAME="smithdilah/students-model:${{ github.sha }}"
          echo "Pushing Docker Image: $DOCKER_IMAGE_NAME"
          docker push $DOCKER_IMAGE_NAME

      - name: Log out from Docker Hub
        if: always()
        run: docker logout
