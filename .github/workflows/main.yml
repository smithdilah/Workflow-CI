name: students MLflow

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  MLFLOW_TRACKING_URI: https://dagshub.com/smithdilah/students_dagshub.mlflow
  MLFLOW_TRACKING_USERNAME: smithdilah
  MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}

jobs:
  train-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r MLProject/requirements.txt

      - name: Run MLflow modeling script
        run: |
          cd MLProject
          python modeling.py

      - name: Get latest MLflow run_id
        id: get_run
        run: |
          echo "import mlflow, os" > get_run.py
          echo "mlflow.set_tracking_uri(\"$MLFLOW_TRACKING_URI\")" >> get_run.py
          echo "client = mlflow.tracking.MlflowClient()" >> get_run.py
          echo "exp = client.get_experiment_by_name(\"students-experiment\")" >> get_run.py
          echo "runs = client.search_runs(exp.experiment_id, order_by=[\"start_time DESC\"], max_results=1)" >> get_run.py
          echo "run_id = runs[0].info.run_id" >> get_run.py
          echo "print(\"Found RUN_ID:\", run_id)" >> get_run.py
          echo "with open(os.environ[\"GITHUB_OUTPUT\"], \"a\") as f: f.write(f\"run_id={run_id}\\n\")" >> get_run.py
          python get_run.py

      - name: Download model.pkl
        run: |
          mkdir -p ./model_dir
          curl -L -u "$MLFLOW_TRACKING_USERNAME:$MLFLOW_TRACKING_PASSWORD" \
            "https://dagshub.com/smithdilah/students_dagshub.mlflow/raw/mlruns/0/${{ steps.get_run.outputs.run_id }}/artifacts/model/model.pkl" \
            -o ./model_dir/model.pkl

      - name: Upload model artifact
        uses: actions/upload-artifact@v4
        with:
          name: rf_model
          path: ./model_dir

      - name: Create Dockerfile
        run: |
          echo "FROM python:3.11-slim" > Dockerfile
          echo "WORKDIR /app" >> Dockerfile
          echo "COPY ./model_dir/model.pkl ./model.pkl" >> Dockerfile
          echo "COPY MLProject/inference.py ./inference.py" >> Dockerfile
          echo "RUN pip install -U pip && pip install pandas scikit-learn flask" >> Dockerfile
          echo "EXPOSE 5000" >> Dockerfile
          echo "CMD [\"python\", \"inference.py\"]" >> Dockerfile

      - name: Build Docker image
        run: |
          docker build -t students-performance-model .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Tag Docker Image
        run: |
          docker tag students-performance-model ${{ secrets.DOCKER_HUB_USERNAME }}/students-performance-model:latest

      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/students-performance-model:latest
