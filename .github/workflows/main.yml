name: Students MLflow CI/CD - Build & Push Docker

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  MLFLOW_TRACKING_URI: https://dagshub.com/smithdilah/students_dagshub.mlflow
  MLFLOW_TRACKING_USERNAME: smithdilah
  MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}

jobs:
  train-log-build-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"

    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install -r MLProject/requirements.txt
        pip install mlflow pyyaml

    - name: Run MLflow model training
      run: |
        cd MLProject
        python modeling.py

    - name: Get latest run_id from MLflow
      id: get_run
      run: |
        echo "import mlflow, os" > get_run.py
        echo "mlflow.set_tracking_uri('${{ env.MLFLOW_TRACKING_URI } }')" >> get_run.py
        echo "client = mlflow.tracking.MlflowClient()" >> get_run.py
        echo "exp = client.get_experiment_by_name('students-experiment')" >> get_run.py
        echo "runs = client.search_runs(exp.experiment_id, order_by=['start_time DESC'])" >> get_run.py
        echo "run_id = runs[0].info.run_id" >> get_run.py
        echo "print(f'::set-output name=run_id::{run_id}')" >> get_run.py
        python get_run.py

    - name: Download model artifacts from DagsHub
      run: |
        mkdir -p model_dir
        files="MLmodel conda.yaml requirements.txt model.pkl"

        for file in $files; do
          curl -L -u "$MLFLOW_TRACKING_USERNAME:$MLFLOW_TRACKING_PASSWORD" \
          "https://dagshub.com/smithdilah/students_dagshub.mlflow/raw/mlruns/0/${{ steps.get_run.outputs.run_id }}/artifacts/model/$file" \
          -o "model_dir/$file"
        done

    - name: Validate MLmodel file
      run: |
        python -c "import yaml; yaml.safe_load(open('model_dir/MLmodel'))"

    - name: Build Docker image from Dockerfile
      run: |
        docker build -t smithdilah/students-model:${{ github.sha }} -f docker/Dockerfile .

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Push Docker image
      run: |
        docker push smithdilah/students-model:${{ github.sha }}

    - name: Log out from Docker
      if: always()
      run: docker logout
